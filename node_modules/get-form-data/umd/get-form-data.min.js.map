{"version":3,"sources":["webpack://getFormData/webpack/universalModuleDefinition","webpack://getFormData/webpack/bootstrap","webpack://getFormData/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NODE_LIST_CLASSES","IGNORED_ELEMENT_TYPES","CHECKED_INPUT_TYPES","TRIM_RE","slice","Array","toString","getFormData","form","options","Error","includeDisabled","trim","elementName","data","elementNames","elementNameLookup","elements","length","element","type","disabled","id","push","getFieldData","fieldName","getFormElementValue","allRadios","concat","selectedIndex","selected","multiple","files","checked","hasAttribute","replace"],"mappings":"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","file":"get-form-data.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"getFormData\"] = factory();\n\telse\n\t\troot[\"getFormData\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const NODE_LIST_CLASSES = {\n  '[object HTMLCollection]': true,\n  '[object NodeList]': true,\n  '[object RadioNodeList]': true\n}\n\n// .type values for elements which can appear in .elements and should be ignored\nconst IGNORED_ELEMENT_TYPES = {\n  'button': true,\n  'fieldset': true,\n  'reset': true,\n  'submit': true\n}\n\nconst CHECKED_INPUT_TYPES = {\n  'checkbox': true,\n  'radio': true\n}\n\nconst TRIM_RE = /^\\s+|\\s+$/g\n\nconst {slice} = Array.prototype\nconst {toString} = Object.prototype\n\n/**\n * @param {HTMLFormElement} form\n * @param {Object} [options]\n * @return {Object.<string,boolean|string|string[]>} an object containing\n *   submittable value(s) held in the form's .elements collection, with\n *   properties named as per element names or ids.\n */\nexport default function getFormData(form, options) {\n  if (!form) {\n    throw new Error(`A form is required by getFormData, was given form=${form}`)\n  }\n\n  options = {\n    includeDisabled: false,\n    trim: false,\n    ...options\n  }\n\n  let data = {}\n  let elementName\n  let elementNames = []\n  let elementNameLookup = {}\n\n  // Get unique submittable element names for the form\n  for (let i = 0, l = form.elements.length; i < l; i++) {\n    let element = form.elements[i]\n    if (IGNORED_ELEMENT_TYPES[element.type] || (element.disabled && !options.includeDisabled)) {\n      continue\n    }\n    elementName = element.name || element.id\n    if (elementName && !elementNameLookup[elementName]) {\n      elementNames.push(elementName)\n      elementNameLookup[elementName] = true\n    }\n  }\n\n  // Extract element data name-by-name for consistent handling of special cases\n  // around elements which contain multiple inputs.\n  for (let i = 0, l = elementNames.length; i < l; i++) {\n    elementName = elementNames[i]\n    let value = getFieldData(form, elementName, options)\n    if (value != null) {\n      data[elementName] = value\n    }\n  }\n\n  return data\n}\n\n/**\n * @param {HTMLFormElement} form\n * @param {string} fieldName\n * @param {Object} [options]\n * @return {?(boolean|string|string[]|File|File[])} submittable value(s) in the\n *   form for a  named element from its .elements collection, or null if there\n *   was no element with that name, or the element had no submittable value(s).\n */\nexport function getFieldData(form, fieldName, options) {\n  if (!form) {\n    throw new Error(`A form is required by getFieldData, was given form=${form}`)\n  }\n  if (!fieldName && toString.call(fieldName) !== '[object String]') {\n    throw new Error(`A field name is required by getFieldData, was given fieldName=${fieldName}`)\n  }\n\n  options = {\n    includeDisabled: false,\n    trim: false,\n    ...options\n  }\n\n  let element = form.elements[fieldName]\n  if (!element || (element.disabled && !options.includeDisabled)) {\n    return null\n  }\n\n  if (!NODE_LIST_CLASSES[toString.call(element)]) {\n    return getFormElementValue(element, options.trim)\n  }\n\n  // Deal with multiple form controls which have the same name\n  let data = []\n  let allRadios = true\n  for (let i = 0, l = element.length; i < l; i++) {\n    if (element[i].disabled && !options.includeDisabled) {\n      continue\n    }\n    if (allRadios && element[i].type !== 'radio') {\n      allRadios = false\n    }\n    let value = getFormElementValue(element[i], options.trim)\n    if (value != null) {\n      data = data.concat(value)\n    }\n  }\n\n  // Special case for an element with multiple same-named inputs which were all\n  // radio buttons: if there was a selected value, only return the value.\n  if (allRadios && data.length === 1) {\n    return data[0]\n  }\n\n  return (data.length > 0 ? data : null)\n}\n\n/**\n * @param {HTMLElement} element a form element.\n * @param {boolean} [trim] should values for text entry inputs be trimmed?\n * @return {?(boolean|string|string[]|File|File[])} the element's submittable\n *   value(s), or null if it had none.\n */\nfunction getFormElementValue(element, trim) {\n  let value = null\n  let {type} = element\n\n  if (type === 'select-one') {\n    if (element.options.length) {\n      value = element.options[element.selectedIndex].value\n    }\n    return value\n  }\n\n  if (type === 'select-multiple') {\n    value = []\n    for (let i = 0, l = element.options.length; i < l; i++) {\n      if (element.options[i].selected) {\n        value.push(element.options[i].value)\n      }\n    }\n    if (value.length === 0) {\n      value = null\n    }\n    return value\n  }\n\n  // If a file input doesn't have a files attribute, fall through to using its\n  // value attribute.\n  if (type === 'file' && 'files' in element) {\n    if (element.multiple) {\n      value = slice.call(element.files)\n      if (value.length === 0) {\n        value = null\n      }\n    }\n    else {\n      // Should be null if not present, according to the spec\n      value = element.files[0]\n    }\n    return value\n  }\n\n  if (!CHECKED_INPUT_TYPES[type]) {\n    value = (trim ? element.value.replace(TRIM_RE, '') : element.value)\n  }\n  else if (element.checked) {\n    if (type === 'checkbox' && !element.hasAttribute('value')) {\n      value = true\n    }\n    else {\n      value = element.value\n    }\n  }\n\n  return value\n}\n\n// For UMD build access to getFieldData\ngetFormData.getFieldData = getFieldData\n"],"sourceRoot":""}